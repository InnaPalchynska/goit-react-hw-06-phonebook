{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","redux/selectors.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","App.js","index.js"],"names":["addContact","createAction","removeContact","filterContact","items","createReducer","id","name","phone","state","action","payload","filter","contact","combineReducers","persistConfig","key","storage","whitelist","persistedContacts","persistReducer","contacts","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","getFilter","getContacts","ContactForm","handleAddContact","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChangeForm","target","value","resetForm","onSubmit","e","preventDefault","uuidv4","forEach","alert","type","pattern","title","required","onChange","ContactList","filteredContacts","toLowerCase","includes","length","map","onClick","Filter","filterValue","placeholder","App","s","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3efaabc6.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('phoneBook/addContact');\r\nexport const removeContact = createAction('phoneBook/removeContact');\r\nexport const filterContact = createAction('phoneBook/filter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { addContact, removeContact, filterContact } from './actions';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', phone: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', phone: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', phone: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', phone: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(initialState, {\r\n  [addContact]: (state, action) => {\r\n    return [...state, action.payload];\r\n  },\r\n  [removeContact]: (state, action) => {\r\n    return state.filter(contact => contact.id !== action.payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (state, action) => {\r\n    return action.payload;\r\n  },\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\r\nimport contacts from './reducer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['items'],\r\n};\r\n\r\nconst persistedContacts = persistReducer(persistConfig, contacts);\r\nconst rootReducer = combineReducers({\r\n  contacts: persistedContacts,\r\n});\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  store,\r\n  persistor,\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/selectors';\r\nimport { addContact } from '../../redux/actions';\r\n\r\nexport default function ContactForm(handleAddContact) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const checkContacts = () => {\r\n    contacts.forEach(contact => {\r\n      if (contact.name === name || contact.number === number) {\r\n        alert('Такой контакт уже есть!!!!');\r\n      }\r\n      return;\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(addContact({ id: uuidv4(), name, number }));\r\n    checkContacts();\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        onChange={handleChangeForm}\r\n      />\r\n\r\n      <input\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        onChange={handleChangeForm}\r\n      />\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts, getFilter } from '../../redux/selectors';\r\nimport { removeContact } from '../../redux/actions';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const filter = useSelector(getFilter);\r\n\r\n  const filteredContacts = contacts.filter(contact => {\r\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  if (filteredContacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {filteredContacts.map(contact => (\r\n        <li key={contact.id}>\r\n          {contact.name}: {contact.number}\r\n          <button onClick={id => dispatch(removeContact(contact.id))}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport { filterContact } from '../../redux/actions';\r\n\r\nconst Filter = () => {\r\n  const filterValue = useSelector(getFilter);\r\n  const dispatch = useDispatch(filterContact);\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      onChange={e => dispatch(filterContact(e.target.value))}\r\n      value={filterValue}\r\n      placeholder=\"Enter name \"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect, useMemo } from 'react';\n\nimport './App.css';\nimport ContactForm from './components/contactForm/ContactForm';\nimport ContactList from './components/contactList/ContactList';\nimport Filter from './components/filter/Filter';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport s from './redux/store';\nimport './index.css';\nimport App from './App';\n\nconst { store, persistor } = s;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}